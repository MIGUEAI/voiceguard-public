#!/bin/bash

# ‚úÖ check_env.sh ‚Äî Verifica o ambiente VoiceGuard
set -euo pipefail

echo "üîç Verifica√ß√£o do ambiente VoiceGuard"

# [1] Verificar se os containers est√£o a correr
echo "üß± [1] Containers ativos:"
docker compose -f /Users/zmiguel/Projetos/voiceguard/infra/docker-compose.yml ps

# [2] Verificar se o volume voiceguard_pgdata existe
echo "üíæ [2] Verifica√ß√£o do volume 'infra_pgdata':"
docker volume inspect infra_pgdata >/dev/null 2>&1 && echo "‚úÖ Volume existe" || echo "‚ùå Volume N√ÉO encontrado"

# [3] Verificar se a base de dados voiceguard_db existe
echo "üì¶ [3] Verifica√ß√£o da base de dados:"
docker compose -f /Users/zmiguel/Projetos/voiceguard/infra/docker-compose.yml exec -T db psql -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname='voiceguard_db'" | grep -q 1 \
  && echo "‚úÖ voiceguard_db existe" \
  || echo "‚ùå voiceguard_db N√ÉO encontrada"

# [4] Verificar se a tabela uploaded_file existe
echo "üìÑ [4] Verifica√ß√£o da tabela uploaded_file:"
docker compose -f /Users/zmiguel/Projetos/voiceguard/infra/docker-compose.yml exec -T db psql -U postgres -d voiceguard_db -c "\dt" | grep -q uploaded_file \
  && echo "‚úÖ Tabela uploaded_file existe" \
  || echo "‚ùå Tabela uploaded_file N√ÉO encontrada"

# [5] Verificar vari√°vel STORAGE_BACKEND no .env
echo "üîê [5] Verifica√ß√£o do .env:"
if grep -q "^STORAGE_BACKEND=" /Users/zmiguel/Projetos/voiceguard/.env; then
  STORAGE=$(grep "^STORAGE_BACKEND=" /Users/zmiguel/Projetos/voiceguard/.env | cut -d '=' -f2)
  echo "‚úÖ STORAGE_BACKEND definido como: $STORAGE"
else
  echo "‚ùå STORAGE_BACKEND n√£o definido no .env"
fi

echo "‚úÖ Verifica√ß√£o conclu√≠da."
